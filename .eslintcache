[{"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\reportWebVitals.js":"1","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\App.js":"2","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Header.js":"3","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\index.js":"4","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Newsfeed.js":"5","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Stats.js":"6","D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\LineGraph.js":"7"},{"size":362,"mtime":1608405315787,"results":"8","hashOfConfig":"9"},{"size":503,"mtime":1608428500082,"results":"10","hashOfConfig":"9"},{"size":802,"mtime":1608428321427,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1608405315787,"results":"12","hashOfConfig":"9"},{"size":572,"mtime":1608513099889,"results":"13","hashOfConfig":"9"},{"size":1741,"mtime":1609721154751,"results":"14","hashOfConfig":"9"},{"size":2275,"mtime":1608516780071,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gt1pk3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\reportWebVitals.js",[],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\App.js",[],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Header.js",["34","35","36","37","38"],"import React from 'react'\r\nimport Logo from '../robinhood.svg'\r\nimport '../assets/Header.css'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header__wrapper\">\r\n      {/* logo */}\r\n      <div className=\"header__logo\"> \r\n        <img src={Logo} alt=\"robinhood logo\" width={25}/>\r\n      </div>\r\n      {/* Searchbar */}\r\n      <div className=\"header__search\">\r\n        <div className=\"header__searchContainer\">\r\n          <input placeholder=\"Search\" type=\"text\"/>   \r\n        </div>\r\n      </div>\r\n      {/* menu items */}\r\n      <div className=\"header__menuItems\">\r\n\r\n        <a href=\"#\">Free Stocks</a>\r\n        <a href=\"#\">Portfolio</a>\r\n        <a href=\"#\">Cash</a>\r\n        <a href=\"#\">Messages</a>\r\n        <a href=\"#\">Account</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n",["39","40"],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\index.js",[],["41","42"],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Newsfeed.js",[],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\Stats.js",["43","44","45","46"],"D:\\Programming Work\\Interview Prep\\Personal_Projects\\robin_clone\\robinhood\\src\\components\\LineGraph.js",["47"],"import React, { useEffect, useState } from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nimport '../assets/LineGraph.css'\r\n\r\nfunction LineGraph() {\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const data = \r\n  [{\r\n    x: 10,\r\n    y: 20\r\n  }, {\r\n    x: 15, \r\n    y: 10\r\n  }, {\r\n    x: 12,\r\n    y: 4\r\n  }]\r\n\r\n  const createMockData = () => {\r\n    let data = [];\r\n    let value = 50;\r\n    for(var i = 0; i < 365; i++) {\r\n      let date = new Date();\r\n      date.setHours(0,0,0,0);\r\n      date.setDate(i);\r\n      value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\r\n      data.push({x: date, y: value});\r\n    }\r\n    setGraphData(data);\r\n  }\r\n\r\n  \r\n  useEffect(()=>{\r\n    createMockData();\r\n  }, []) //will run depending on what data changes\r\n  // will run depending on what data changes \r\n  // if set to empty array, nothing in there, it will run once when the component is loaded\r\n  // will listen on when the component is loaded\r\n  \r\n\r\n  return (\r\n    <div className=\"linegraph\">\r\n      <Line \r\n        data={{\r\n          datasets: [{\r\n            type: \"line\",\r\n            data: graphData,\r\n            backgroundColor: \"#000000\",\r\n            borderColor: \"#5AC53B\",\r\n            borderWidth: 2,\r\n            pointBorderColor: 'rgba(0,0,0,0)',\r\n            pointBackgroundColor: 'rgba(0,0,0,0)',\r\n            pointHoverBackgroundColor: \"#5AC53B\",\r\n            pointHoverBorderColor: \"#000000\",\r\n            pointHoverBorderWidth: 4,\r\n            pointHoverRadius: 6\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltips: {\r\n            mode: \"index\",\r\n            intersect: false\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"time\",\r\n                time: {\r\n                  displayFormats: \"MM/DD/YY\",\r\n                  tooltipFormat: \"ll\"\r\n                },\r\n                ticks: {\r\n                  display: false\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [{\r\n              ticks: {\r\n                display: false\r\n              }\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph\r\n",{"ruleId":"48","severity":1,"message":"49","line":21,"column":9,"nodeType":"50","endLine":21,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":22,"column":9,"nodeType":"50","endLine":22,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":23,"column":9,"nodeType":"50","endLine":23,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":24,"column":9,"nodeType":"50","endLine":24,"endColumn":21},{"ruleId":"48","severity":1,"message":"49","line":25,"column":9,"nodeType":"50","endLine":25,"endColumn":21},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":11,"column":10,"nodeType":"59","messageId":"60","endLine":11,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":11,"column":21,"nodeType":"59","messageId":"60","endLine":11,"endColumn":33},{"ruleId":"57","severity":1,"message":"62","line":24,"column":9,"nodeType":"59","messageId":"60","endLine":24,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":27,"column":28,"nodeType":"65","messageId":"66","endLine":27,"endColumn":30},{"ruleId":"57","severity":1,"message":"67","line":9,"column":9,"nodeType":"59","messageId":"60","endLine":9,"endColumn":13},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-unused-vars","'stockData' is assigned a value but never used.","Identifier","unusedVar","'setstockData' is assigned a value but never used.","'tempStocksData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]